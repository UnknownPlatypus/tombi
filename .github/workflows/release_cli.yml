name: Release CLI and VSCode Extension

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  delete-tombi-cli-dev-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
            name: tombi-cli-0.0.0-*

  release-cli-and-vscode:
    needs: [delete-tombi-cli-dev-artifacts]
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            vscode_target: win32-x64
          - os: windows-latest
            target: i686-pc-windows-msvc
            vscode_target: win32-ia32
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            vscode_target: win32-arm64
          # - os: ubuntu-20.04
          #   target: x86_64-unknown-linux-gnu
          #   vscode_target: linux-x64
          # - os: ubuntu-20.04
          #   target: aarch64-unknown-linux-gnu
          #   vscode_target: linux-arm64
          # - os: ubuntu-20.04
          #   target: arm-unknown-linux-gnueabihf
          #   vscode_target: linux-armhf
          - os: macos-13
            target: x86_64-apple-darwin
            vscode_target: darwin-x64
          - os: macos-13
            target: aarch64-apple-darwin
            vscode_target: darwin-arm64
    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    env:
      TOMBI_TARGET: ${{ matrix.target }}
      GITHUB_REF: ${{ (github.ref) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Update apt repositories
        if: matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get update

      - name: Install AArch64 target toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install ARM target toolchain
        if: matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get install gcc-arm-linux-gnueabihf

      - name: Run xtask set-version
        run: cargo xtask set-version >> $GITHUB_ENV

      - name: Get TOMBI_VERSION
        run: echo "TOMBI_VERSION=${TOMBI_VERSION}"

      - name: Rub xtask dist
        run: cargo xtask dist
        env:
          RUST_BACKTRACE: "1"

      - name: Print TOMBI_VERSION
        run: echo $TOMBI_VERSION

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tombi-cli-${TOMBI_VERSION}-${{ matrix.target }}
          path: ./dist

      - run: pnpm install
        working-directory: ./editors/vscode

      - run: pnpm run build
        working-directory: ./editors/vscode

      - name: Package VSCode Extension
        run: pnpx vsce package --no-dependencies -o "../../dist/tombi-cli-${TOMBI_VERSION}-${{ matrix.vscode_target }}.vsix" --target ${{ matrix.vscode_target }}
        working-directory: ./editors/vscode

      - name: Publish VSCode Extension
        run: pnpm run publish --pat ${{ secrets.VSCODE_MARKETPLACE_TOKEN }} --packagePath "../../dist/tombi-cli-${TOMBI_VERSION}-${{ matrix.vscode_target }}.vsix"
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: ./editors/vscode
